server.port=8080
spring.jackson.date-format=yyyy/MM/dd HH:mm:ss
spring.jackson.time-zone=GMT+8
#######################
#####thymeleaf 配置#####
#######################
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.prefix:classpath:/templates/
spring.thymeleaf.suffix:.html
#缓存设置为false, 这样修改之后马上生效，便于调试
spring.thymeleaf.cache=false
#######################
###### mysql 配置 ######
#######################
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://10.18.26.36:3306/tx?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf8&amp;useJDBCCompliantTimezoneShift=true&amp;useLegacyDatetimeCode=false&amp;serverTimezone=Asia/Shanghai
#spring.datasource.username=root
#spring.datasource.password=root
#######################
#######oracle 配置######
#######################
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@10.18.26.201:1521:TF
spring.datasource.username=TF
spring.datasource.password=TF
#阿里druid连接池驱动配置信息
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#######################
#####连接池的配置信息#####
#######################
# 初始化大小，最大
spring.datasource.initialSize=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
# 校验SQL，Oracle配置 spring.datasource.validationQuery=SELECT 1 FROM DUAL，如果不配validationQuery项，则下面三项配置无用
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
# 监控统计用的filter:stat
# 日志用的filter:log4j
# 防御sql注入的filter:wall
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true
# Spring 监控配置（配置多个AOP切入点使用英文逗号分隔）
spring.datasource.druid.aop-patterns=com.tangl.demo.controller.*,com.tangl.demo.service.*
#redis
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=
# 连接超时时间（毫秒）
spring.redis.timeout=5000
# Redis默认情况下有16个分片，这里配置具体使用的分片
spring.redis.database=0
# 连接池最大连接数（使用负值表示没有限制） 默认 8
spring.redis.lettuce.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
spring.redis.lettuce.pool.max-wait=-1
# 连接池中的最大空闲连接 默认 8
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接 默认 0
spring.redis.lettuce.pool.min-idle=0
#cache
# 一般来说是不用配置的，Spring Cache 会根据依赖的包自行装配
spring.cache.type=redis
logging.file.path=G:/javaWorkSpace/springBootDemo/
logging.file.name=springbootdemo.log
#######################
###### activiti 配置 ###
#######################
#自动创建、更新、验证数据库表结构
#扫描processes下的流程文件 ，通过源码发现默认是这样扫描的
spring.activiti.process-definition-location-prefix=classpath:/process/
#不校验流程文件，默认是开启的
spring.activiti.check-process-definitions=true
#数据结构更新，默认是开启的，
spring.activiti.database-schema-update=true
#保存历史数据级别设置为full最高级别，便于历史数据的追溯
#通过进入源码发现默认是audit级别
spring.activiti.history-level=full
